group "dk.glasius"

apply plugin: "org.grails.grails-plugin"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {

    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.grails:grails-dependencies"

    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "io.micronaut:micronaut-core"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-messaging:1.3.7"
    testCompile "org.grails:grails-web-testing-support"

    runtime 'com.virtualdogbert:GroovyConfigWriter:1.1'
    runtime 'org.yaml:snakeyaml:1.23'
}

bootJar.enabled = false

tasks.withType(Test) {
    systemProperty 'TEST_HOME', 'home-value'
    systemProperty 'user.home', System.getProperty('user.home')
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = 'external-config'
            version = project.version

            from components.java
            artifact sourceJar
            artifact javadocJar

            pom {
                name = 'External Config'
                description = 'Mimic the Grails 2 way of handling external configurations'
                url = 'https://github.com/sbglasius/external-config'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'sbglasius'
                        name = 'SÃ¸ren Berg Glasius'
                        email = 'soeren@glasius.dk'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/sbglasius/external-config.git'
                    developerConnection = 'scm:git:ssh:github.com:sbglasius/external-config.git'
                    url = 'https://github.com/sbglasius/external-config/'
                }
            }
        }
    }
}

ext."signing.keyId" = project.findProperty('signing.keyId') ?: System.getenv('SIGNING_KEY')
ext."signing.password" = project.findProperty('signing.password') ?: System.getenv('SIGNING_PASSPHRASE')
ext."signing.secretKeyRingFile" = project.findProperty('signing.secretKeyRingFile') ?: (System.getenv('GITHUB_WORKSPACE') ? "${System.getenv('GITHUB_WORKSPACE')}/secring.gpg" : "${System.getProperty('user.home')}/.gnupg/secring.gpg")

ext.isReleaseVersion = !version.endsWith('SNAPSHOT')

afterEvaluate {
    signing {
        required { isReleaseVersion }
        sign publishing.publications.maven
    }
}
